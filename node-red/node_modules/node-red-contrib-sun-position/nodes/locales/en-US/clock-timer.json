{
	"clock-timer": {
		"label": {
			"clock-timer": "clock-timer",
			"clock-timer-palette": "clock timer",
			"output1": "payload based on rule",
			"output2": "state object",
			"payloadDefault": "payload",
			"payloadDefaultOffset": "Offset",
			"payloadDefaultFormat": "Format",
			"overwriteExpire": "expire",
			"ruleCondition": "only if",
			"ruleConditionThreshold": "threshold",
			"ruleAndOr": "and/or",
			"ruleCondNone": "N/A",
			"ruleCondAnd": "and",
			"ruleCondOr": "or",
			"ruleTimeFrom": "↧ from",
			"ruleTimeUntil": "↥ until",
			"ruleTimeNone": "N/A",
			"ruleTimeMax": "no later than (max)",
			"ruleTimeMin": "at the earliest (min)",
			"ruleTimeDays": "only on day",
			"ruleTimeMonths": "only on month",
			"ruleDescription": "Description",
			"rulePayload": "Payload: ",
			"rulePayloadND": "No Payload",
			"ruleTopic": "Topic: ",
			"time": "time",
			"name": "name",
			"showEnhSettings": "Enhanced settings",
			"outputs": "Outputs",
			"offset": "time offset",
			"offset-timeMin": "earliest (min) offset",
			"offset-timeMax": "latest (max) offset",
			"singleOutput": "single (1)",
			"splitOutput": "dual (2)",
			"btnAdd": "add",
			"btnSort": "sort",
			"btnClear": "clear",
			"dialogtitle": "Edit Rule",
			"autoTrigger": "auto trigger",
			"autoTrigger2": "dynamic, but max every",
			"validForDays": "valid days",
			"validForMonths": "valid months",
			"specialDays": "special days",
			"onlyEven": "even",
			"onlyOdd": "odd",
			"onlyEvenDays": "only even days",
			"onlyOddDays": "only odd days"
		},
		"placeholder": {
			"payloadDefault": "payload if no other used",
			"payloadDefaultOffset": "",
			"payloadDefaultFormat": "",
			"overwriteExpire": "(opt) the duration a manual setting will remain",
			"name": "Name",
			"expiryperiod": "120",
			"outputs": "number of outputs",
			"btnAdd": "add new empty rule",
			"btnSort": "sort all rules, Attention this can change the behavior!",
			"btnClear": "removes all rules from list",
			"condoperand": "operand",
			"time": "time",
			"offset": "time offset",
			"level": "level",
			"ruleTimeDays": "select days wherefore it should be valid",
			"ruleTimeMonths": "select months wherefore it should be valid",
			"autoTrigger": "automatic triggers new calculation of the rule in a dynamic changing time interval"
		},
		"text": {
			"time": "Time control:Only rows will be evaluated, where property is <b>not used</b> or matches the selected value. <br><b>until</b>:The first matching line will used, where defined time is <b>not used</b> or greater than <b>now</b>.<br><b>from</b>:The last matching line will used, where defined time is <b>not used</b> or less than <b>now</b>.<br>",
			"payloadDefault": "if no rule matches the following payload will be used.",
			"overwrite": "manual overwrite of the rule payload"
		},
		"tips": {
			"timerControl": "<a href=\"https://github.com/rdmtc/node-red-contrib-sun-position/blob/HEAD/clock_timer.md\">Documentation and examples</a>"
		},
		"reasons": {
			"overwriteNoExpire": "position is overwritten with priority __prio__",
			"overwriteExpire": "position is overwritten with priority __prio__, will expire __dateISO__",
			"default": "position is set to default position because no other rule matches",
			"ruleTime": "position by time - rule __timeOp__ __timeLocal__ [__number__] __name__",
			"ruleCond": "position by conditional rule __text__ [__number__] __name__",
			"ruleTimeCond": "position by time rule __timeOp__ __timeLocal__ and condition __text__ [__number__] __name__",
			"rule": "position by fixed rule [__number__] __name__",
			"ruleMin": "__org__ (__level__ is below minimum) [__number__] __name__",
			"ruleMax": "__org__ (__level__ is above maximum) [__number__] __name__"
		},
		"states": {
			"overwriteNoExpire": "overwritten [prio=__prio__]",
			"overwriteExpire": "overwritten [prio=__prio__], till __timeLocal__",
			"default": "default",
			"ruleTime": "__timeOp__ __timeLocal__ [__number__] __name__",
			"ruleCond": "__textShort__ [__number__] __name__",
			"ruleTimeCond": "__timeOp__ __timeLocal__ + cond __operatorText__ [__number__] __name__",
			"rule": "by fixed rule [__number__] __name__",
			"ruleMin": "__org__ [min rule __number__]",
			"ruleMax": "__org__ [max rule __number__]"
		},
		"errors": {
			"warning": "Warning: __message__",
			"internal": "Error: __message__",
			"error-time": "Error get time: __message__",
			"getPropertyData": "error getting condition data: \"__message__\" skipping time",
			"usingTempValue": "Could not evaluate __type__.__value__ and using stored value \"__usedValue__\"!",
			"notEvaluableProperty": "could not evaluate __type__.__value__, using \"__usedValue__\"!"
		}
	}
}
