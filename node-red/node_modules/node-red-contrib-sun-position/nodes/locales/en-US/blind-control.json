{
	"blind-control": {
		"label": {
			"blind-control":"blind-control",
			"blind-control-palette": "blind",
			"output1":"new blind level",
			"output2": "state object",
			"windowTop": "window top",
			"windowBottom": "window bottom",
			"windowAzimuthStart":"start",
			"windowAzimuthEnd": "end",
			"blindIncrement": "Increment",
			"blindOpenPos": "open position (max)",
			"blindClosedPos": "closed position (min)",
			"blindLevelDefault": "default position",
			"blindLevelMin": "min position",
			"blindLevelMax": "max position",
			"overwriteExpire": "expire",
			"ruleCondition": "only if",
			"ruleConditionThreshold": "threshold",
			"ruleAndOr": "and/or",
			"ruleCondNone": "N/A",
			"ruleCondAnd": "and",
			"ruleCondOr": "or",
			"ruleTimeFrom": "‚Üß from",
			"ruleTimeUntil": "‚Ü• until",
			"ruleTimeNone": "N/A",
			"ruleTimeMax": "no later than (max)",
			"ruleTimeMin": "at the earliest (min)",
			"ruleDescription": "Description",
			"ruleBlindLevel": "blind position",
			"ruleLevelAbs": "‚Üï absolute",
			"ruleLevelMin": "‚≠≥‚ùó minimum (oversteer)",
			"ruleLevelMax": "‚≠±Ô∏è‚ùó maximum (oversteer)",
			"ruleLevelResetMin": "‚≠≥‚úã reset minimum",
			"ruleLevelResetMax": "‚≠±Ô∏è‚úã reset maximum",
			"ruleLevelND": "use default level (e.g. sun control)",
			"sunControlMode": "mode",
			"sunControlOff": "no restriction, no sun control",
			"sunControlRestrict": "restrict sunlight (üåû Summer)",
			"sunControlMaximize": "maximize sunlight (‚õÑ Winter)",
			"sunFloorLength": "length on the floor",
			"sunMinAltitude": "min altitude threshold",
			"sunMinDelta": "min delta",
			"time":"time",
			"name":"name",
			"oversteerValue": "oversteer",
			"oversteerThreshold": "Threshold",
			"oversteerBlindPos": "blind position",
			"oversteer2Value": "oversteer add",
			"oversteer2Threshold": "Threshold",
			"oversteer2BlindPos": "blind position",
			"smoothTime": "smoothTime",
			"showEnhSettings": "Enhanced settings",
			"outputs": "Outputs",
			"offset":"time offset",
			"offset-timeMin":"earliest (min) offset",
			"offset-timeMax":"latest (max) offset",
			"singleOutput": "single (1)",
			"splitOutput": "dual (2)",
			"btnAdd": "add",
			"btnSort": "sort",
			"btnClear": "clear",
			"dialogtitle":"Edit Rule"
		},
		"placeholder": {
			"windowTop": "top of the window",
			"windowBottom": "bottom of the window",
			"windowAzimuthStart": "window left to geographical north",
			"windowAzimuthEnd": "window right to geographical north",
			"blindIncrement": "0.01 or 1",
			"blindOpenPos": "100",
			"blindClosedPos": "0",
			"blindLevelDefault": "position if no other used",
			"blindLevelMin": "minimum position if sun calculated position",
			"blindLevelMax": "maximum position if sun calculated position",
			"sunControlMode": "select if sun control is active and how it should working",
			"OverwriteExpire": "(opt) the duration a manual setting will remain",
			"sunFloorLength": "(opt) the extent to which direct sunlight is to be allowed into the room through the window, defined as a length on the floor",
			"sunMinAltitude": "(opt) minimum altitude of the sun for determination of blind position",
			"sunMinDelta": "(opt) define the minimum change of the blind position",
			"oversteerValue": "value to compare",
			"oversteerThreshold": "threshold for the compare",
			"oversteerBlindPos": "blind position when the compare be the case",
			"smoothTime":"(opt) prevents changes due to sun in the given time",
			"name": "Name",
			"expiryperiod": "120",
			"outputs": "number of outputs",
			"btnAdd": "add new empty rule",
			"btnSort": "sort all rules, Attention this can change the behavior!",
			"btnClear": "removes all rules from list",
			"condoperand":"operand",
			"time":"time",
			"offset":"time offset",
			"level": "level"
		},
		"text": {
			"blind": "blind settings",
			"time": "Time control:Only rows will be evaluated, where property is <b>not used</b> or matches the selected value. <br><b>until</b>:The first matching line will used, where defined time is <b>not used</b> or greater than <b>now</b>.<br><b>from</b>:The last matching line will used, where defined time is <b>not used</b> or less than <b>now</b>.<br>",
			"blindLevelDefault":"if no rule matches the following position will be used, On sun light restriction this is the blind level wenn sun is not in the window.",
			"overwrite": "manual overwrite of the blind position",
			"sunControlNotActive": "Only rule control",
			"sunControlMode": "Instead of the default blind position there can be restricted the extent to which direct sunlight may shine into the room.",
			"windowAzimuth": "representing the orientation of the window to geographical north (in degrees) when the sun falls into the window (sun azimuth).",
			"windowPos": "window settings, measurement from the floor to bottom and top of the window covered by the blind",
			"oversteer": "allows to oversteer the position depending on the sun under defined condition such as weather (for example sky covered by clouds, lighting, ...)",
			"sunControlMaximization":"<ul><li>If no rule or override matches<ul><li>If the sun is <em>not</em> in the window the blind will set to defined <strong>min position</strong>. (oversteer will be ignored)</li><li>If the sun is in the window</li><li>If any oversteer data are setup and oversteer conditions are fulfilled the blind will set to the defined oversteer blind position.</li><li>otherwise the blind level is set to defined <strong>max position</strong>.</li></ul></li></ul>",
			"sunControlRestriction": "If no rule or override matches, the node calculates the appropriate blind position to restrict the amount of direct sunlight entering the room.",
			"sunCtrlLoF": "The limit to what extent direct sunlight is to be allowed into the room through the window, defined as a length on the floor.",
			"sunCtrlRestrict": "Limit the frequency of changes by time and/or delta; set the minimum altitude (in degree) of the sun"
		},
		"typeOptions": {
			"100": "open (max)",
			"75": "75%",
			"66": "66%",
			"50": "50%",
			"33": "33%",
			"25": "25%",
			"10": "10%",
			"0": "closed (min)"
		},
		"tips": {
			"sunPosControl": "<a href=\"https://github.com/rdmtc/node-red-contrib-sun-position/blob/HEAD/blind_control.md\">Documentation and examples</a>"
		},
		"reasons": {
			"overwriteNoExpire": "position is overwritten with priority __prio__",
			"overwriteExpire": "position is overwritten with priority __prio__, will expire __dateISO__",
			"default": "position is set to default position because no other rule matches",
			"ruleTime": "position by time - rule __timeOp__ __timeLocal__ [__number__] __name__",
			"ruleCond": "position by conditional rule __text__ [__number__] __name__",
			"ruleTimeCond": "position by time rule __timeOp__ __timeLocal__ and condition __text__ [__number__] __name__",
			"rule": "position by fixed rule [__number__] __name__",
			"sunMinAltitude": "sun below minimum altitude",
			"sunMinDelta": "change is less ad min delta",
			"sunNotInWin": "Sun not in window",
			"sunCtrl": "sun control",
			"sunCtrlMin": "__org__ (__level__ is below minimum)",
			"sunCtrlMax": "__org__ (__level__ is above maximum)",
			"oversteer": "sun position oversteers",
			"smooth": "Position is not changed to __pos__ because not enough time has passed since the last change (time smooth)",
			"sunInWinMax": "Sun in window (Level is maximum)",
			"sunNotInWinMin": "Sun not in window (Level is minimum)",
			"ruleMin": "__org__ (__level__ is below minimum) [__number__] __name__",
			"ruleMax": "__org__ (__level__ is above maximum) [__number__] __name__"
		},
		"states": {
			"overwriteNoExpire": "overwritten [prio=__prio__]",
			"overwriteExpire": "overwritten [prio=__prio__], till __timeLocal__",
			"default": "default",
			"ruleTime": "__timeOp__ __timeLocal__ [__number__] __name__",
			"ruleCond": "__textShort__ [__number__] __name__",
			"ruleTimeCond": "__timeOp__ __timeLocal__ + cond __operatorText__ [__number__] __name__",
			"rule": "by fixed rule [__number__] __name__",
			"sunMinAltitude": "min altitude",
			"sunMinDelta": "min delta",
			"sunNotInWin": "no sun in window",
			"sunCtrl": "sun control",
			"sunCtrlMin": "__org__ (min)",
			"sunCtrlMax": "__org__ (max)",
			"oversteer": "oversteer",
			"smooth": "block change to __pos__",
			"sunInWinMax":"Sun in window (max)",
			"sunNotInWinMin": "Sun not in window (min)",
			"ruleMin": "__org__ [min rule __number__]",
			"ruleMax": "__org__ [max rule __number__]"
		},
		"errors": {
			"error": "Error: __message__",
			"warning": "Warning: __message__",
			"internal": "Error: __message__",
			"error-time": "Error get time: __message__",
			"invalid-blind-level": "Given Blind-Position __pos__ is not a valid Position!",
			"getOversteerData": "error getting oversteer data: __message__",
			"getBlindPosData": "error getting blind level: __message__",
			"getPropertyData": "error getting condition data: \"__message__\" skipping time",
			"smoothTimeToolong":"The selected smooth is too long!!",
			"usingTempValue": "Could not evaluate __type__.__value__ and using stored value \"__usedValue__\"!",
			"notEvaluableProperty": "could not evaluate __type__.__value__, using \"__usedValue__\"!"
		}
	}
}
